{"pages":[{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"位运算","text":"搞完了论文了，无事可做，就重新刷刷leetcode吧，从每日一题开始。不是第一次刷leetcode了，尽量做每日一题的时候把相关的题型总结一下。 今天每日一题为交替位二进制数。普通方法模拟过程即可。复习一下位运算中常见的小技巧： 1234567int num;//取最后一位num&amp;1;//把最后一个1变成0num&amp;(num-1);//仅保留最后一个1num&amp;(-num); num&amp;(~num+1); 此题还可以通过规律来进行处理。 位运算问题中还有一类模拟问题，即利用位运算来对字符串进行处理，多用于只有小写字母的问题并且字符串中字母不考虑顺序。将字符串转化位二进制数。 比如最大单词长度乘积。 还有更复杂的一种用法，位运算+状态压缩，比如猜字谜。 其中用到了位运算技巧为： 123456//检查 a 的第 b 位是否为 1,两种可能，0或1。a&gt;&gt;b&amp;1;//将 a 的第 b 位设置为 1(b位为0时适用)a+=1&lt;&lt;b;//上述两个操作可以合并为一个a|=1&lt;&lt;b; 这两个操作在位运算中出现频率极高。适用于问题状态空间大，但是原字符串长度较短（一般小于10）","link":"/2022/03/26/%E4%BD%8D%E8%BF%90%E7%AE%97/"},{"title":"滑动窗口","text":"","link":"/2022/03/31/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"}],"tags":[{"name":"位运算","slug":"位运算","link":"/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"},{"name":"滑动窗口","slug":"滑动窗口","link":"/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"}],"categories":[{"name":"算法","slug":"算法","link":"/categories/%E7%AE%97%E6%B3%95/"}]}